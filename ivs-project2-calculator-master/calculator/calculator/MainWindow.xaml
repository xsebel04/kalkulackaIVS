<Window    x:Name="Calculator_view" x:Class="calculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:calculator"
        mc:Ignorable="d"
        Title="Kalkulačka" Height="450" Width="360"  KeyDown="Grid_KeyUp" HorizontalAlignment="Center" ResizeMode="NoResize" Foreground="{x:Null}" Style="{DynamicResource Window_main_style}" VerticalAlignment="Center" AllowsTransparency="True" WindowStyle="None" MouseLeftButtonDown="Calculator_view_MouseLeftButtonDown">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="Button_num_style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="10">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="0,0,5,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Right" VerticalAlignment="Top" IsEnabled="False"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Button_num_style_pi" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="10">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="39.005,0,0,33.4" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="20.995"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Condition Property="WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="Window_main_style" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="5" Visibility="Visible">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CloseBtn_style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="2">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-3,0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="display_style" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
        </Style>
        <Style x:Key="btn_pow" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" >
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="0,0,5,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                            <TextBlock HorizontalAlignment="Left" Height="30.5" Margin="50,0,-4.5,0" TextWrapping="Wrap" Text="y" VerticalAlignment="Top" Width="14.5" FontSize="14"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="border" SnapsToDevicePixels="true">
                            <Rectangle HorizontalAlignment="Left" Height="60" Margin="0" VerticalAlignment="Top" Width="60" RadiusY="7.333" RadiusX="7.333" OpacityMask="{x:Null}" Stroke="#FF1A1A1A" Fill="#FF1A1A1A"/>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="12.188,22.02" OpacityMask="#FFFF6C6C"/>
                            <TextBlock HorizontalAlignment="Left" Height="28.667" Margin="37,-1.332,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="23" Foreground="#FFFF6C6C" FontSize="24" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"><Run Text="x"/><Run Text=" "/></TextBlock>
                            <TextBlock HorizontalAlignment="Left" Height="15" Margin="46.333,-1.332,0,0" TextWrapping="Wrap" Text="y" VerticalAlignment="Top" Width="13.667" Foreground="#FFFF6C6C" FontSize="14" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="10">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="0,0,5,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Right" VerticalAlignment="Top" IsEnabled="False"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="border" SnapsToDevicePixels="true">
                            <Rectangle HorizontalAlignment="Left" Height="60" Margin="0" VerticalAlignment="Top" Width="60" RadiusY="7.333" RadiusX="7.333" OpacityMask="{x:Null}" Stroke="#FF1A1A1A" Fill="#FF1A1A1A"/>
                            <TextBlock HorizontalAlignment="Left" Height="28.667" Margin="10,-1.332,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50" Foreground="#FFFF6C6C" FontSize="24" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"><Run Text="log "/><Run Text="x"/><Run Text=" "/></TextBlock>
                            <TextBlock x:Name="___TextBlock___a_" HorizontalAlignment="Left" Height="15" Margin="38.17,12.024,0,0" TextWrapping="Wrap" Text="a" VerticalAlignment="Top" Width="13.667" Foreground="#FFFF6C6C" FontSize="14" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="border" SnapsToDevicePixels="true">
                            <Rectangle x:Name="Button" HorizontalAlignment="Left" Height="60" Margin="0" VerticalAlignment="Top" Width="60" RadiusY="7.333" RadiusX="7.333" OpacityMask="{x:Null}" Stroke="#FF1A1A1A" Fill="#FF1A1A1A"/>
                            <TextBlock HorizontalAlignment="Left" Height="28.667" TextWrapping="Wrap" VerticalAlignment="Top" Width="30.583" Foreground="#FFFF6C6C" FontSize="24" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" Margin="29.417,-1.332,0,0"><Run FontSize="25" Text="√"/><Run Text="x"/></TextBlock>
                            <TextBlock x:Name="___TextBlock___a_" HorizontalAlignment="Left" Height="15" TextWrapping="Wrap" VerticalAlignment="Top" Width="13.667" Foreground="#FFFF6C6C" FontSize="14" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" Margin="30.5,-4.41,0,0"><Run Text="y"/></TextBlock>
                            <Rectangle Fill="#FFFF6C6C" Height="Auto" RadiusY="0" RadiusX="0" Stroke="#FFFF6C6C" Width="Auto" RenderTransformOrigin="0.481,-1.117" Margin="41.536,3.454,2.776,55.546"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle5" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="border" SnapsToDevicePixels="true">
                            <Rectangle HorizontalAlignment="Left" Height="60" Margin="0" VerticalAlignment="Top" Width="60" RadiusY="7.333" RadiusX="7.333" OpacityMask="{x:Null}" Stroke="#FF1A1A1A" Fill="#FF1A1A1A"/>
                            <TextBlock HorizontalAlignment="Left" Height="28.667" Margin="41.666,-0.997,-4.666,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="23" Foreground="White" FontSize="25" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"><Run Text="/"/><LineBreak/><Run/></TextBlock>
                            <TextBlock HorizontalAlignment="Left" Height="18.333" Margin="46.999,1.21,-0.666,0" TextWrapping="Wrap" Text="-" VerticalAlignment="Top" Width="13.667" Foreground="White" FontSize="25" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"/>
                            <TextBlock HorizontalAlignment="Left" Height="23.666" Margin="35.667,-7.324,0,0" TextWrapping="Wrap" Text="+" VerticalAlignment="Top" Width="13.667" Foreground="White" FontSize="25" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle6" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="10">
                            <Grid HorizontalAlignment="Left" Height="60" VerticalAlignment="Top" Width="60">
                                <TextBlock HorizontalAlignment="Left" Height="27.75" Margin="39.25,0,0,0" TextWrapping="Wrap" Text="x" VerticalAlignment="Top" Width="20.75"/>
                                <TextBlock HorizontalAlignment="Left" Height="25.75" Margin="49.75,0,0,0" TextWrapping="Wrap" Text="y" VerticalAlignment="Top" Width="10.25" FontSize="14"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle7" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="10">
                            <Grid HorizontalAlignment="Left" Height="60" VerticalAlignment="Top" Width="60">
                                <TextBlock HorizontalAlignment="Left" Height="28.667" TextWrapping="Wrap" VerticalAlignment="Top" Width="30.583" Foreground="#FFFF6C6C" FontSize="24" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" Margin="28.417,0,0,0"><Run FontSize="25" Text="√"/><Run Text="x"/></TextBlock>
                                <TextBlock x:Name="___TextBlock___a_" HorizontalAlignment="Left" Height="15" TextWrapping="Wrap" VerticalAlignment="Top" Width="13.667" Foreground="#FFFF6C6C" FontSize="14" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" Margin="29.5,-3.078,0,0"><Run Text="y"/></TextBlock>
                                <Rectangle Fill="#FFFF6C6C" Height="Auto" RadiusY="0" RadiusX="0" Stroke="#FFFF6C6C" Width="Auto" RenderTransformOrigin="0.481,-1.117" Margin="40.536,3.54,5.588,55.089"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle8" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="10">
                            <Grid HorizontalAlignment="Left" Height="60" VerticalAlignment="Top" Width="60">
                                <TextBlock HorizontalAlignment="Left" Height="28.667" Margin="13.5,2.168,-3.5,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="50" Foreground="#FFFF6C6C" FontSize="24" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"><Run Text="log "/><Run Text="x"/><Run Text=" "/></TextBlock>
                                <TextBlock x:Name="___TextBlock___a_" HorizontalAlignment="Left" Height="15" Margin="41.67,15.524,0,0" TextWrapping="Wrap" Text="a" VerticalAlignment="Top" Width="13.667" Foreground="#FFFF6C6C" FontSize="14" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle9" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="10">
                            <Grid HorizontalAlignment="Left" Height="60" VerticalAlignment="Top" Width="60">
                                <TextBlock HorizontalAlignment="Left" Height="28.667" Margin="41.666,2.503,-4.666,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="23" Foreground="White" FontSize="25" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"><Run Text="/"/><LineBreak/><Run/></TextBlock>
                                <TextBlock HorizontalAlignment="Left" Height="18.333" Margin="46.999,4.71,-0.666,0" TextWrapping="Wrap" Text="-" VerticalAlignment="Top" Width="13.667" Foreground="White" FontSize="25" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"/>
                                <TextBlock HorizontalAlignment="Left" Height="23.666" Margin="35.667,-3.824,0,0" TextWrapping="Wrap" Text="+" VerticalAlignment="Top" Width="13.667" Foreground="White" FontSize="25" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="#7F000000"/>
    </Window.Background>
    <Grid Height="435" Margin="10,0,10,10" Width="340" VerticalAlignment="Bottom">
        <Grid HorizontalAlignment="Left" Height="25" Margin="0" VerticalAlignment="Top" Width="340">
            <Button x:Name="close_btn" Content="x" HorizontalAlignment="Left" Margin="320,0,0,0" VerticalAlignment="Top" Width="20" Height="20" Background="#FFFF6C6C" Click="close_btn_Click" BorderBrush="{x:Null}" Foreground="Black" Style="{DynamicResource CloseBtn_style}"/>
        </Grid>
        <Grid Width="340" Margin="0" Height="410" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="14"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="btn_0" Content="0" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Bottom" Width="130" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" Click="btn_0_Click" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_1" Content="1" HorizontalAlignment="Left" Margin="0,0,0,70" Width="60" RenderTransformOrigin="0,0" Height="60" BorderThickness="0" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" VerticalAlignment="Bottom" Click="btn_1_Click" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_2" Content="2" HorizontalAlignment="Left" Margin="70,0,0,70" VerticalAlignment="Bottom" Width="60" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" Click="btn_2_Click" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_3" Content="3" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="60" Margin="140,0,0,70" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" Click="btn_3_Click" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_4" Content="4" HorizontalAlignment="Left" Margin="0,0,0,140" Width="60" BorderThickness="0" Height="60" RenderTransformOrigin="0.5,0.5" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" VerticalAlignment="Bottom" Click="btn_4_Click" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_5" Content="5" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="60" Margin="70,0,0,140" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" Click="btn_5_Click" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_6" Content="6" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="60" Margin="140,0,0,140" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" Click="btn_6_Click" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_7" Content="7" HorizontalAlignment="Left" Margin="0,0,0,210" Width="60" BorderThickness="0" Height="60" RenderTransformOrigin="0.5,0.5" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" VerticalAlignment="Bottom" Click="btn_7_Click" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_8" Content="8" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="60" Margin="70,0,0,210" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" Click="btn_8_Click" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_9" Content="9" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="60" Margin="140,0,0,210" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" Click="btn_9_Click" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_point" Content=", " HorizontalAlignment="Left" Width="60" Margin="140,0,0,0" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF666666" BorderBrush="{x:Null}" Foreground="White" Click="btn_point_Click" Style="{DynamicResource Button_num_style}" Height="60" VerticalAlignment="Bottom" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_invert" Content="+/-" HorizontalAlignment="Left" Width="60" Margin="0,0,0,280" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF1A1A1A" BorderBrush="{x:Null}" Foreground="White" VerticalAlignment="Bottom" Style="{DynamicResource ButtonStyle9}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25" Click="btn_invert_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_minus" Content="-" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="60" Margin="210,0,0,210" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF1A1A1A" Foreground="#FFFF6C6C" BorderBrush="#FF666666" Style="{DynamicResource Button_num_style}" FontSize="25" Click="btn_minus_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_div" Content="/" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="60" Margin="280,0,0,210" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF1A1A1A" Foreground="#FFFF6C6C" BorderBrush="#FF666666" Style="{DynamicResource Button_num_style}" FontSize="25" Click="btn_div_Click" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_log" Content="log" HorizontalAlignment="Left" Width="60" Margin="70,0,0,280" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF1A1A1A" Foreground="#FFFF6C6C" BorderBrush="#FF666666" VerticalAlignment="Bottom" Style="{DynamicResource ButtonStyle8}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25" Click="btn_log_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_C" Content="C" HorizontalAlignment="Left" Width="60" Margin="280,0,0,0" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FFFF6C6C" BorderBrush="{x:Null}" Click="btn_C_Click" Style="{DynamicResource Button_num_style}" Height="60" VerticalAlignment="Bottom" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_back_arr" Content="←" HorizontalAlignment="Left" Width="60" Margin="280,0,0,70" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FFFF6C6C" BorderBrush="{x:Null}" Click="btn_back_arr_Click" Style="{DynamicResource Button_num_style_pi}" Height="60" VerticalAlignment="Bottom" FontSize="25" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_plus" Content="+" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="60" Margin="210,0,0,140" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF1A1A1A" Foreground="#FFFF6C6C" BorderBrush="#FF666666" Style="{DynamicResource Button_num_style}" FontSize="25" Click="btn_plus_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_eq" Content="=" HorizontalAlignment="Left" Width="60" Margin="210,0,0,0" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF1A1A1A" Foreground="#FFFF6C6C" BorderBrush="{x:Null}" Style="{DynamicResource Button_num_style}" Height="130" VerticalAlignment="Bottom" FontSize="25" Click="btn_eq_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_mul" Content="*" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="60" Margin="280,0,0,140" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF1A1A1A" Foreground="#FFFF6C6C" BorderBrush="#FF666666" Style="{DynamicResource Button_num_style}" FontSize="25" Click="btn_mul_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_sqrt" Content='√' HorizontalAlignment="Left" Width="60" Margin="210,0,0,280" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF1A1A1A" Foreground="#FFFF6C6C" BorderBrush="#FF666666" VerticalAlignment="Bottom" Style="{DynamicResource ButtonStyle7}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25" Click="btn_sqrt_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btn_fact" Content="x!" HorizontalAlignment="Left" Width="60" Margin="140,0,0,280" Height="60" BorderThickness="0" RenderTransformOrigin="0.5,0.5" Background="#FF1A1A1A" Foreground="#FFFF6C6C" BorderBrush="{x:Null}" VerticalAlignment="Bottom" Style="{DynamicResource Button_num_style}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25" Click="btn_fact_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <TextBlock x:Name="display_textBox" HorizontalAlignment="Left" Margin="0,0,0,350" TextWrapping="Wrap" VerticalAlignment="Bottom" Height="60" Width="340" FontSize="36" TextAlignment="Right" FontFamily="/calculator;component/Properties/#GeosansLight" Background="#7FFFFFFF" Style="{DynamicResource display_style}">
                <TextBlock.Foreground>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="Black" Offset="1"/>
                    </LinearGradientBrush>
                </TextBlock.Foreground></TextBlock>
            <Button x:Name="btn_pow" Content="(x)y" HorizontalAlignment="Left" Width="60" Margin="280,0,0,280" BorderThickness="0" Height="60" RenderTransformOrigin="0.5,0.5" Background="#FF1A1A1A" Foreground="#FFFF6C6C" BorderBrush="#FF666666" VerticalAlignment="Bottom" Style="{DynamicResource ButtonStyle6}" FontFamily="/calculator;component/Properties/Fonts/#GeosansLight" FontSize="25" Click="btn_pow_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
        </Grid>
    </Grid>
</Window>
